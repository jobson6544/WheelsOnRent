# Generated by Django 5.0.7 on 2024-10-29 03:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mainapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('feature_id', models.AutoField(primary_key=True, serialize=False)),
                ('feature_name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=50, unique=True)),
                ('policy_provider', models.CharField(max_length=100)),
                ('coverage_type', models.CharField(choices=[('third_party', 'Third Party'), ('comprehensive', 'Comprehensive'), ('zero_dep', 'Zero Depreciation')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('road_tax_details', models.CharField(max_length=255)),
                ('fitness_expiry_date', models.DateField()),
                ('puc_expiry_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('model_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=255)),
                ('model_year', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('registration_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_number', models.CharField(max_length=255)),
                ('registration_date', models.DateField()),
                ('registration_end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='VehicleCompany',
            fields=[
                ('sub_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pickup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.CharField(max_length=50, unique=True)),
                ('otp', models.CharField(max_length=6)),
                ('is_verified', models.BooleanField(default=False)),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pickup', to='mainapp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.CharField(max_length=50, unique=True)),
                ('otp', models.CharField(max_length=6)),
                ('is_verified', models.BooleanField(default=False)),
                ('return_time', models.DateTimeField(blank=True, null=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_return', to='mainapp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.BooleanField(default=True)),
                ('rental_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.IntegerField(choices=[(1, 'Available'), (2, 'Rented'), (3, 'Maintenance'), (4, 'Delivered')], default=1)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'CNG'), ('lpg', 'LPG')], max_length=20)),
                ('engine_number', models.CharField(max_length=50)),
                ('chassis_number', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicle_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mileage', models.IntegerField(default=0, help_text='Current mileage of the vehicle')),
                ('year', models.IntegerField(default=2024)),
                ('seating_capacity', models.IntegerField(default=5)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic')], default='manual', max_length=20)),
                ('air_conditioning', models.BooleanField(default=True)),
                ('fuel_efficiency', models.FloatField(default=0.0)),
                ('predicted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('features', models.ManyToManyField(to='vendor.features')),
                ('insurance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insured_vehicle', to='vendor.insurance')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.model')),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendor.registration')),
            ],
        ),
        migrations.CreateModel(
            name='RentalPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('units_rented', models.IntegerField(default=0)),
                ('season', models.CharField(choices=[('summer', 'Summer'), ('fall', 'Fall'), ('winter', 'Winter'), ('spring', 'Spring')], max_length=10)),
                ('day_of_week', models.IntegerField()),
                ('is_holiday', models.BooleanField(default=False)),
                ('weather_condition', models.CharField(default='normal', max_length=20)),
                ('competitor_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='vendor.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='insurance',
            name='vehicle',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_insurance', to='vendor.vehicle'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='vehicle_images/')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='vendor.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='model',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.vehiclecompany'),
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rc_document', models.FileField(blank=True, null=True, upload_to='documents/rc/')),
                ('insurance_document', models.FileField(blank=True, null=True, upload_to='documents/insurance/')),
                ('puc_document', models.FileField(blank=True, null=True, upload_to='documents/puc/')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='vendor.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='vehiclecompany',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.vehicletype'),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('vendor_id', models.AutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=255)),
                ('full_address', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='vendor_profiles/')),
                ('password_reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('password_reset_token_created_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vendor.vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclecompany',
            unique_together={('category', 'company_name')},
        ),
    ]
